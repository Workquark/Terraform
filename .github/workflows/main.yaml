name: MAIN

on: 
  push:
    branches:
      - main

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: read
  pull-requests: write
  id-token: write # This is required for requesting the JWT

jobs:
  plan:
    runs-on: ubuntu-latest
    name: Apply
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: auth
        name: Google Authentication
        uses: google-github-actions/auth@v0.6.0
        with:
          # trunk-ignore(checkov/CKV_SECRET_6)
          project_id: ${{ secrets.project }}
          token_format: access_token
          workload_identity_provider: projects/${{ secrets.project_number }}/locations/global/workloadIdentityPools/github/providers/github-provider
          service_account: github@${{ secrets.project }}.iam.gserviceaccount.com
          access_token_lifetime: 1300s

      - name: terraform apply
        uses: dflook/terraform-apply@v1
        with:
          path: Terraform/GCP/env/management
          label: management
          auto_approve: true
          # workspace: prod
          var_file: Terraform/GCP/env/management/.auto.tfvars
          variables: |
            github_token = "${{ secrets.gh_token }}"
            project_id = "${{ secrets.project }}"
            region = "europe-west1"
            auth_token = "${{ steps.auth.outputs.access_token }}"
            twingate_api_token = "${{ secrets.twingate_api_token }}"
            twingate_admin_group_id = "${{ secrets.twingate_admin_group_id }}"
          # backend_config_file: env/prod.backend
          # backend_config: token=${{ secrets.BACKEND_TOKEN }}

      - name: Get outputs
        uses: dflook/terraform-output@v1
        id: tf_apply_output
        with:
          path: Terraform/GCP/env/management

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          version: '>= 515.0.0'

      - uses: azure/setup-kubectl@v4
        id: install

      - uses: twingate/github-action@v1
        with:
          service-key: ${{ steps.tf_apply_output.outputs.twingate_service_account_key }}
          # service-key: ${{ secrets.TWINGATE_SERVICE_ACCOUNT_SECRET_KEY }}

      - name: use gcloud cli
        env:
          USE_GKE_GCLOUD_AUTH_PLUGIN: True
        run: |
          echo ${{ steps.tf_apply_output.outputs.twingate_service_account_key }}
          # gcloud components install gke-gcloud-auth-plugin
          # gcloud container clusters get-credentials jrc-online-management-gke-cluster --region europe-west1
          # kubectl get pods -A

